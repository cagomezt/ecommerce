"""
Django settings for the backend project.

This file contains the configuration settings for the Django project, including
database setup, middleware, installed apps, and other project-specific settings.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see:
https://docs.djangoproject.com/en/5.1/topics/settings/
"""

from pathlib import Path
from django.conf.global_settings import STATICFILES_DIRS
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ('django-insecure-5kv(%=d+x*4d#-%s3q$=wn2gi4eg)('
              'c*gp=8n@*n1^a4c+d&)@')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# List of allowed hosts for the application.
ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',  # Admin interface
    'django.contrib.auth',  # Authentication framework
    'django.contrib.contenttypes',  # Content type system
    'django.contrib.sessions',  # Session framework
    'django.contrib.messages',  # Messaging framework
    'django.contrib.staticfiles',  # Static file handling

    'rest_framework',  # Django REST framework for building APIs
    "corsheaders",
    # Middleware for handling Cross-Origin Resource Sharing (CORS)

    'base.apps.BaseConfig',  # Custom app named 'base'
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": False,
    "UPDATE_LAST_LOGIN": False,

    "ALGORITHM": "HS256",
    "VERIFYING_KEY": "",
    "AUDIENCE": None,
    "ISSUER": None,
    "JSON_ENCODER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE":
        "rest_framework_simplejwt.authentication"
        ".default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",

    "JTI_CLAIM": "jti",

    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1),

    "TOKEN_OBTAIN_SERIALIZER":
        "base.serializers.MyTokenObtainPairSerializer",
    "TOKEN_REFRESH_SERIALIZER":
        "rest_framework_simplejwt.serializers.TokenRefreshSerializer",
    "TOKEN_VERIFY_SERIALIZER":
        "rest_framework_simplejwt.serializers.TokenVerifySerializer",
    "TOKEN_BLACKLIST_SERIALIZER":
        "rest_framework_simplejwt.serializers.TokenBlacklistSerializer",
    "SLIDING_TOKEN_OBTAIN_SERIALIZER":
        "rest_framework_simplejwt.serializers.TokenObtainSlidingSerializer",
    "SLIDING_TOKEN_REFRESH_SERIALIZER":
        "rest_framework_simplejwt.serializers.TokenRefreshSlidingSerializer",
}

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",  # Handles CORS headers

    'django.middleware.security.SecurityMiddleware',  # Security enhancements
    'django.contrib.sessions.middleware.SessionMiddleware',
    # Session management
    'django.middleware.common.CommonMiddleware',  # Common HTTP middleware
    'django.middleware.csrf.CsrfViewMiddleware',  # CSRF protection
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Authentication
    'django.contrib.messages.middleware.MessageMiddleware',  # Messaging
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Clickjacking protection
]

# Root URL configuration module
ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Template engine
        'DIRS': [],  # Directories for custom templates
        'APP_DIRS': True,  # Enable app-specific templates
        'OPTIONS': {
            'context_processors': [  # Context processors for templates
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI application entry point
WSGI_APPLICATION = 'backend.wsgi.application'

# Database configuration
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # SQLite database engine
        'NAME': BASE_DIR / 'db.sqlite3',  # Database file path
    }
}

# Password validation settings
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.UserAttributeSimilarityValidator',
        # Prevents passwords similar to user attributes
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.MinimumLengthValidator',  # Enforces minimum password length
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.CommonPasswordValidator',  # Prevents common passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
                '.NumericPasswordValidator',  # Prevents fully numeric passwords
    },
]

# Internationalization settings
# https://docs.djangoproject.com/en/5.1/topics/i18n/
LANGUAGE_CODE = 'en-us'  # Default language
TIME_ZONE = 'UTC'  # Default timezone
USE_I18N = True  # Enable internationalization
USE_TZ = True  # Enable timezone support

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = 'static/'  # URL for serving static files
MEDIA_URL = 'images/'  # URL for serving media files

STATICFILES_DIRS = [
    BASE_DIR / 'static'  # Directory for additional static files
]

MEDIA_ROOT = 'static/images'  # Directory for storing media files

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True  # Allow all origins for CORS

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # Default primary key type
